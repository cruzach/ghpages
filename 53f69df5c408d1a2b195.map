{"version":3,"sources":["/Users/charlescruzan/Desktop/ExpoTests/ghpages/assets/images/robot-prod.png","/Users/charlescruzan/Desktop/ExpoTests/ghpages/constants/Colors.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/components/TabBarIcon.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/components/StyledText.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/screens/HomeScreen.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/screens/LinksScreen.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/screens/SettingsScreen.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/navigation/MainTabNavigator.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/navigation/AppNavigator.web.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/App.js","/Users/charlescruzan/Desktop/ExpoTests/ghpages/assets/images/robot-dev.png","/Users/charlescruzan/Desktop/ExpoTests/ghpages/assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","__webpack_require__","p","Colors","tintColor","tabIconDefault","tabIconSelected","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","TabBarIcon","props","react_default","a","createElement","Ionicons","name","size","style","marginBottom","color","focused","MonoText","Text","extends_default","fontFamily","HomeScreen","View","styles","container","ScrollView","contentContainerStyle","contentContainer","welcomeContainer","Image","source","require","welcomeImage","getStartedContainer","DevelopmentModeNotice","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","tabBarInfoContainer","tabBarInfoText","navigationFilename","codeHighlightText","developmentModeText","WebBrowser","navigationOptions","header","StyleSheet","create","flex","backgroundColor","fontSize","lineHeight","textAlign","paddingTop","alignItems","marginTop","width","height","resizeMode","marginLeft","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","objectSpread_default","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","LinksScreen","samples","title","SettingsScreen","config","web","headerMode","default","HomeStack","createStackNavigator","Home","tabBarLabel","tabBarIcon","_ref","OS","path","LinksStack","Links","_ref2","SettingsStack","Settings","_ref3","tabNavigator","createBottomTabNavigator","switchNavigator","createSwitchNavigator","Main","MainTabNavigator","createBrowserApp","history","App","_useState","useState","_useState2","slicedToArray_default","isLoadingComplete","setLoadingComplete","skipLoadingScreen","StatusBar","barStyle","AppNavigator_web","AppLoading","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","regenerator_default","async","_context","prev","next","awrap","Promise","all","Asset","loadAsync","Font","font","space-mono","stop","error","console","warn"],"mappings":"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","file":"static/js/app.91325d3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot-prod.c7578911.png\";","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={26}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import React from 'react';\nimport { Text } from 'react-native';\n\nexport function MonoText(props) {\n  return (\n    <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />\n  );\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport {\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { MonoText } from '../components/StyledText';\n\nexport default function HomeScreen() {\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={\n              __DEV__\n                ? require('../assets/images/robot-dev.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          />\n        </View>\n\n        <View style={styles.getStartedContainer}>\n          <DevelopmentModeNotice />\n\n          <Text style={styles.getStartedText}>Get started by opening</Text>\n\n          <View\n            style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n            <MonoText>screens/HomeScreen.js</MonoText>\n          </View>\n\n          <Text style={styles.getStartedText}>\n            Change this text and your app will automatically reload.\n          </Text>\n        </View>\n\n        <View style={styles.helpContainer}>\n          <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n            <Text style={styles.helpLinkText}>\n              Help, it didn’t automatically reload!\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n\n      <View style={styles.tabBarInfoContainer}>\n        <Text style={styles.tabBarInfoText}>\n          This is a tab bar. You can edit it in:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>\n            navigation/MainTabNavigator.js\n          </MonoText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use\n        useful development tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/workflow/development-mode/'\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/workflow/up-and-running/#cant-see-your-changes'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { ExpoLinksView } from '@expo/samples';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      {/**\n       * Go ahead and delete ExpoLinksView and replace it with your content;\n       * we just wanted to provide you with some helpful links.\n       */}\n      <ExpoLinksView />\n    </ScrollView>\n  );\n}\n\nLinksScreen.navigationOptions = {\n  title: 'Links',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: '#fff',\n  },\n});\n","import React from 'react';\nimport { ExpoConfigView } from '@expo/samples';\n\nexport default function SettingsScreen() {\n  /**\n   * Go ahead and delete ExpoConfigView and replace it with your content;\n   * we just wanted to give you a quick view of your config.\n   */\n  return <ExpoConfigView />;\n}\n\nSettingsScreen.navigationOptions = {\n  title: 'app.json',\n};\n","import React from 'react';\nimport { Platform } from 'react-native';\nimport { createStackNavigator, createBottomTabNavigator } from 'react-navigation';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\n\nconst config = Platform.select({\n  web: { headerMode: 'screen' },\n  default: {},\n});\n\nconst HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n  },\n  config\n);\n\nHomeStack.navigationOptions = {\n  tabBarLabel: 'Home',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon\n      focused={focused}\n      name={\n        Platform.OS === 'ios'\n          ? `ios-information-circle${focused ? '' : '-outline'}`\n          : 'md-information-circle'\n      }\n    />\n  ),\n};\n\nHomeStack.path = '';\n\nconst LinksStack = createStackNavigator(\n  {\n    Links: LinksScreen,\n  },\n  config\n);\n\nLinksStack.navigationOptions = {\n  tabBarLabel: 'Links',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-link' : 'md-link'} />\n  ),\n};\n\nLinksStack.path = '';\n\nconst SettingsStack = createStackNavigator(\n  {\n    Settings: SettingsScreen,\n  },\n  config\n);\n\nSettingsStack.navigationOptions = {\n  tabBarLabel: 'Settings',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-options' : 'md-options'} />\n  ),\n};\n\nSettingsStack.path = '';\n\nconst tabNavigator = createBottomTabNavigator({\n  HomeStack,\n  LinksStack,\n  SettingsStack,\n});\n\ntabNavigator.path = '';\n\nexport default tabNavigator;\n","import { createBrowserApp } from '@react-navigation/web';\nimport { createSwitchNavigator } from 'react-navigation';\n\nimport MainTabNavigator from './MainTabNavigator';\n\nconst switchNavigator = createSwitchNavigator({\n  // You could add another route here for authentication.\n  // Read more at https://reactnavigation.org/docs/en/auth-flow.html\n  Main: MainTabNavigator,\n});\nswitchNavigator.path = '';\n\nexport default createBrowserApp(switchNavigator, { history: 'hash' });\n","import { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport AppNavigator from './navigation/AppNavigator';\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <AppNavigator />\n      </View>\n    );\n  }\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([\n      require('./assets/images/robot-dev.png'),\n      require('./assets/images/robot-prod.png'),\n    ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      ...Ionicons.font,\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\n      // remove this if you are not using it in your app\n      'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n    }),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/robot-dev.54da1e98.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}